blueprint:
  name: Pulizie Automation Blueprint
  description: >
    Blueprint per automazione pulizie mattina e sera con script.pulisci_stanza.
  domain: automation

  input:
    morning_time:
      name: Orario pulizia mattutina
      selector:
        time: {}
    evening_time:
      name: Orario pulizia serale
      selector:
        time: {}
    days_morning:
      name: Giorni pulizia mattutina
      selector:
        select:
          options:
            - lunedì
            - martedì
            - mercoledì
            - giovedì
            - venerdì
            - sabato
            - domenica
          multiple: true
    days_evening:
      name: Giorni pulizia serale
      selector:
        select:
          options:
            - lunedì
            - martedì
            - mercoledì
            - giovedì
            - venerdì
            - sabato
            - domenica
          multiple: true
    cleaned_boolean:
      name: Flag pulizia effettuata (cleaned_today)
      selector:
        entity:
          domain: input_boolean
    vacuum_status_sensor:
      name: Sensore stato robot
      selector:
        entity:
          domain: sensor
    wait_states:
      name: Stati fine pulizia
      selector:
        select:
          options:
            - idle
            - sleeping
            - charging
          multiple: true
    away_home_counter:
      name: Contatore away/home
      selector:
        entity:
          domain: counter
    tasks_morning:
      name: Task pulizia mattutina
      selector:
        list:
          min: 1
          item:
            name: Task
            selector:
              object:
                properties:
                  segment_id:
                    name: Segment ID
                    selector:
                      number: {}
                  tipo_pulizia:
                    name: Tipo pulizia
                    selector:
                      select:
                        options:
                          - aspirazione
                          - lavaggio
                          - genius
                          - genius_deep
    tasks_evening_away:
      name: Task pulizia serale (fuori casa)
      selector:
        list:
          min: 1
          item:
            name: Task Away
            selector:
              object:
                properties:
                  segment_id:
                    name: Segment ID
                    selector:
                      number: {}
                  tipo_pulizia:
                    name: Tipo pulizia
                    selector:
                      select:
                        options:
                          - aspirazione
                          - lavaggio
                          - genius
                          - genius_deep
    tasks_evening_default:
      name: Task pulizia serale default
      selector:
        list:
          min: 1
          item:
            name: Task Default
            selector:
              object:
                properties:
                  segment_id:
                    name: Segment ID
                    selector:
                      number: {}
                  tipo_pulizia:
                    name: Tipo pulizia
                    selector:
                      select:
                        options:
                          - aspirazione
                          - lavaggio
                          - genius
                          - genius_deep

trigger:
  - platform: time
    at: !input morning_time
    id: morning
  - platform: time
    at: !input evening_time
    id: evening

condition: []

action:
  - choose:
      # Mattina
      - conditions:
          - condition: template
            value_template: >-
              {{ trigger.id == 'morning'
                 and now().strftime('%A').lower() in
                     (input.days_morning | map('lower') | list)
                 and is_state(input.cleaned_boolean, 'off') }}
        sequence:
          - repeat:
              for_each: '{{ input.tasks_morning }}'
              sequence:
                - service: script.turn_on
                  target:
                    entity_id: script.pulisci_stanza
                  data:
                    variables:
                      segment_id: '{{ repeat.item.segment_id }}'
                      tipo_pulizia: '{{ repeat.item.tipo_pulizia }}'
                - wait_template: >
                    {{ states[input.vacuum_status_sensor].state in input.wait_states }}
          - service: input_boolean.turn_on
            target:
              entity_id: !input cleaned_boolean
      # Sera
      - conditions:
          - condition: template
            value_template: >-
              {{ trigger.id == 'evening'
                 and now().strftime('%A').lower() in
                     (input.days_evening | map('lower') | list) }}
        sequence:
          - choose:
              # Away
              - conditions:
                  - condition: state
                    entity_id: !input away_home_counter
                    state: '1'
                sequence:
                  - repeat:
                      for_each: '{{ input.tasks_evening_away }}'
                      sequence:
                        - service: script.turn_on
                          target:
                            entity_id: script.pulisci_stanza
                          data:
                            variables:
                              segment_id: '{{ repeat.item.segment_id }}'
                              tipo_pulizia: '{{ repeat.item.tipo_pulizia }}'
                        - wait_template: >
                            {{ states[input.vacuum_status_sensor].state in input.wait_states }}
              # Default
              - default:
                  - repeat:
                      for_each: '{{ input.tasks_evening_default }}'
                      sequence:
                        - service: script.turn_on
                          target:
                            entity_id: script.pulisci_stanza
                          data:
                            variables:
                              segment_id: '{{ repeat.item.segment_id }}'
                              tipo_pulizia: '{{ repeat.item.tipo_pulizia }}'
                        - wait_template: >
                            {{ states[input.vacuum_status_sensor].state in input.wait_states }}
          - service: input_boolean.turn_on
            target:
              entity_id: !input cleaned_boolean

mode: single
